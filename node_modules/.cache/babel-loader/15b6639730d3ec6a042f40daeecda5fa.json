{"ast":null,"code":"var _jsxFileName = \"/home/aram/Desktop/React-file/crwn-clothing/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\n\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\n\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, { ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 8\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","BUTTTON_TYPE_CLASSES","Button","children","otherProps","CustomButton"],"sources":["/home/aram/Desktop/React-file/crwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["\n\nimport { BaseButton, GoogleSignInButton, InvertedButton } from './button.styles';\n\nconst BUTTON_TYPE_CLASSES = {\n    base: 'base',\n    google: 'google-sign-in',\n    inverted: 'inverted',\n};\n\nconst getButton = (buttonType = BUTTTON_TYPE_CLASSES.base) => \n({\n  [BUTTON_TYPE_CLASSES.base]: BaseButton,\n  [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n  [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n}[buttonType]);\n\n\nconst Button = ({children, buttonType, ...otherProps}) => {\n    const CustomButton = getButton(buttonType);\n\n    return (\n       <CustomButton {...otherProps}>\n          {children}\n       </CustomButton>\n    );\n};\n\nexport default Button;"],"mappings":";AAEA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,cAAzC,QAA+D,iBAA/D;;AAEA,MAAMC,mBAAmB,GAAG;EACxBC,IAAI,EAAE,MADkB;EAExBC,MAAM,EAAE,gBAFgB;EAGxBC,QAAQ,EAAE;AAHc,CAA5B;;AAMA,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAD,uEAAcC,oBAAoB,CAACL,IAAnC;EAAA,OACjB;IACC,CAACD,mBAAmB,CAACC,IAArB,GAA4BJ,UAD7B;IAEC,CAACG,mBAAmB,CAACE,MAArB,GAA8BJ,kBAF/B;IAGC,CAACE,mBAAmB,CAACG,QAArB,GAAgCJ;EAHjC,EAICM,UAJD,CADiB;AAAA,CAAlB;;AAQA,MAAME,MAAM,GAAG,QAA2C;EAAA,IAA1C;IAACC,QAAD;IAAWH,UAAX;IAAuB,GAAGI;EAA1B,CAA0C;EACtD,MAAMC,YAAY,GAAGN,SAAS,CAACC,UAAD,CAA9B;EAEA,oBACG,QAAC,YAAD,OAAkBI,UAAlB;IAAA,UACID;EADJ;IAAA;IAAA;IAAA;EAAA,QADH;AAKH,CARD;;KAAMD,M;AAUN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}