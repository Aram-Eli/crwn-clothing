{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nimport { createFactory } from \"react\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC48j06auSy1KdJa_yxcl2_RXeTVc_E2-c\",\n  authDomain: \"crwn-clothing-8f979.firebaseapp.com\",\n  projectId: \"crwn-clothing-8f979\",\n  storageBucket: \"crwn-clothing-8f979.appspot.com\",\n  messagingSenderId: \"418958970310\",\n  appId: \"1:418958970310:web:b63c9ab7fc395d351876c7\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef; //return userDocRef\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createAuthUserWithEmailAndPassword(auth, email, password);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","createFactory","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password"],"sources":["/home/aram/Desktop/React-file/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["\nimport { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n  createUserWithEmailAndPassword,\n} from 'firebase/auth';\nimport { \n  getFirestore,\n  doc,\n  getDoc,\n  setDoc,\n} from 'firebase/firestore';\nimport { createFactory } from \"react\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC48j06auSy1KdJa_yxcl2_RXeTVc_E2-c\",\n  authDomain: \"crwn-clothing-8f979.firebaseapp.com\",\n  projectId: \"crwn-clothing-8f979\",\n  storageBucket: \"crwn-clothing-8f979.appspot.com\",\n  messagingSenderId: \"418958970310\",\n  appId: \"1:418958970310:web:b63c9ab7fc395d351876c7\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth) => {\n  if(!userAuth) return;\n\n  const userDocRef = doc(db, 'users', userAuth.uid)\n\n  const userSnapshot = await getDoc(userDocRef);\n\n  if(!userSnapshot.exists()){\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n        console.log('error creating the user', error.message);\n    }\n  }\n\n  return userDocRef;\n  //return userDocRef\n};\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if(!email || !password) return;\n\n  return await createAuthUserWithEmailAndPassword(auth, email, password);\n}"],"mappings":"AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,OADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,kBAJF,EAKEC,8BALF,QAMO,eANP;AAOA,SACEC,YADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,MAJF,QAKO,oBALP;AAMA,SAASC,aAAT,QAA8B,OAA9B;AAEA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,qCAFS;EAGrBC,SAAS,EAAE,qBAHU;EAIrBC,aAAa,EAAE,iCAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE;AANc,CAAvB;AASA,MAAMC,WAAW,GAAGlB,aAAa,CAACW,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAIf,kBAAJ,EAAvB;AAEAe,cAAc,CAACC,mBAAf,CAAmC;EAC/BC,MAAM,EAAE;AADuB,CAAnC;AAIA,OAAO,MAAMC,IAAI,GAAGrB,OAAO,EAApB;AACP,OAAO,MAAMsB,qBAAqB,GAAG,MAAMpB,eAAe,CAACmB,IAAD,EAAOH,cAAP,CAAnD;AACP,OAAO,MAAMK,wBAAwB,GAAG,MAAMtB,kBAAkB,CAACoB,IAAD,EAAOH,cAAP,CAAzD;AAEP,OAAO,MAAMM,EAAE,GAAGnB,YAAY,EAAvB;AAEP,OAAO,MAAMoB,0BAA0B,GAAG,MAAOC,QAAP,IAAoB;EAC5D,IAAG,CAACA,QAAJ,EAAc;EAEd,MAAMC,UAAU,GAAGrB,GAAG,CAACkB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;EAEA,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAD,CAAjC;;EAEA,IAAG,CAACE,YAAY,CAACC,MAAb,EAAJ,EAA0B;IACxB,MAAM;MAAEC,WAAF;MAAeC;IAAf,IAAyBN,QAA/B;IACA,MAAMO,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACF,MAAM1B,MAAM,CAACmB,UAAD,EAAa;QACvBI,WADuB;QAEvBC,KAFuB;QAGvBC;MAHuB,CAAb,CAAZ;IAKD,CAND,CAME,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,KAAK,CAACG,OAA7C;IACH;EACF;;EAED,OAAOX,UAAP,CAtB4D,CAuB5D;AACD,CAxBM;AA0BP,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAP,EAAcQ,QAAd,KAA2B;EAC3E,IAAG,CAACR,KAAD,IAAU,CAACQ,QAAd,EAAwB;EAExB,OAAO,MAAMD,kCAAkC,CAAClB,IAAD,EAAOW,KAAP,EAAcQ,QAAd,CAA/C;AACD,CAJM"},"metadata":{},"sourceType":"module"}